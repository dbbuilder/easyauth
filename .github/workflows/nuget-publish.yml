name: Publish NuGet Packages

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allow manual trigger
    inputs:
      version:
        description: 'Package version (e.g., 1.0.0-alpha.1)'
        required: true
        type: string

env:
  DOTNET_VERSION: '8.0.x'
  CONFIGURATION: 'Release'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Run tests
      run: dotnet test --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal --collect:"XPlat Code Coverage"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: '**/TestResults/**/*'

  package:
    name: Create NuGet Packages
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Determine version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        elif [ "${{ github.ref_type }}" = "tag" ]; then
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=1.0.0-alpha.${{ github.run_number }}" >> $GITHUB_OUTPUT
        fi

    - name: Update package versions
      run: |
        VERSION="${{ steps.version.outputs.VERSION }}"
        echo "Setting package version to: $VERSION"
        
        # Update Core package version
        sed -i "s/<PackageVersion>.*<\/PackageVersion>/<PackageVersion>$VERSION<\/PackageVersion>/" src/EasyAuth.Framework.Core/EasyAuth.Framework.Core.csproj
        
        # Update Extensions package version
        sed -i "s/<PackageVersion>.*<\/PackageVersion>/<PackageVersion>$VERSION<\/PackageVersion>/" src/EasyAuth.Framework.Extensions/EasyAuth.Framework.Extensions.csproj

    - name: Restore dependencies
      run: dotnet restore

    - name: Build packages
      run: |
        dotnet pack src/EasyAuth.Framework.Core/EasyAuth.Framework.Core.csproj \
          --configuration ${{ env.CONFIGURATION }} \
          --no-restore \
          --output ./packages \
          --verbosity normal
          
        dotnet pack src/EasyAuth.Framework.Extensions/EasyAuth.Framework.Extensions.csproj \
          --configuration ${{ env.CONFIGURATION }} \
          --no-restore \
          --output ./packages \
          --verbosity normal

    - name: List created packages
      run: ls -la ./packages/

    - name: Upload packages artifact
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./packages/*.nupkg

  publish-nuget:
    name: Publish to NuGet.org
    runs-on: ubuntu-latest
    needs: package
    if: github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'
    environment: production
    
    steps:
    - name: Download packages
      uses: actions/download-artifact@v4
      with:
        name: nuget-packages
        path: ./packages

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Publish Core package to NuGet
      run: |
        dotnet nuget push ./packages/EasyAuth.Framework.Core.*.nupkg \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate

    - name: Publish Extensions package to NuGet
      run: |
        dotnet nuget push ./packages/EasyAuth.Framework.*.nupkg \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate

  publish-github:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    needs: package
    if: github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Download packages
      uses: actions/download-artifact@v4
      with:
        name: nuget-packages
        path: ./packages

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Add GitHub package source
      run: |
        dotnet nuget add source \
          --username ${{ github.actor }} \
          --password ${{ secrets.GITHUB_TOKEN }} \
          --store-password-in-clear-text \
          --name github \
          "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

    - name: Publish to GitHub Packages
      run: |
        dotnet nuget push ./packages/*.nupkg \
          --source github \
          --skip-duplicate

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [publish-nuget, publish-github]
    if: github.ref_type == 'tag'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download packages
      uses: actions/download-artifact@v4
      with:
        name: nuget-packages
        path: ./packages

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: EasyAuth Framework ${{ github.ref }}
        body: |
          ## EasyAuth Framework Release ${{ github.ref }}
          
          ### NuGet Packages Published:
          - **EasyAuth.Framework.Core** - Core authentication framework
          - **EasyAuth.Framework** - Complete framework with extensions
          
          ### Installation:
          ```bash
          # Install main package (recommended)
          dotnet add package EasyAuth.Framework
          
          # Or install core only
          dotnet add package EasyAuth.Framework.Core
          ```
          
          ### What's New:
          - Multi-provider OAuth authentication (Google, Facebook, Apple, Azure B2C)
          - Secure configuration management with Key Vault support
          - Automatic database setup and migrations
          - Comprehensive logging and monitoring
          - Enterprise-grade security features
          
          See the [README](https://github.com/dbbuilder/easyauth#readme) for full documentation.
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./packages/
        asset_name: nuget-packages.zip
        asset_content_type: application/zip